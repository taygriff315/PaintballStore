@model PaintballStore.DATA.EF.Product

@{
    ViewBag.Title = "Create";
}
<br /><br />
<br /><br />



@using (Html.BeginForm("Create","Products",FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-container" >
        <div class="form-horizontal form-box">
        <h4 style="margin-left: 2rem;">Create Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group  justify-content-center">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductTypeId, "ProductTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
                @Html.DropDownList("ProductTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerId, "ManufacturerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
                @Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
               <input type="file" name="productImage" />
                @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImage2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
               <input type="file" name="productImage2"/>
                @Html.ValidationMessageFor(model => model.ProductImage2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductImage3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 inputs">
               <input type="file" name="productImage3" />
                @Html.ValidationMessageFor(model => model.ProductImage3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input style="margin-top: 1rem;" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div></div>

}

<div style="margin-left:2rem; margin-bottom: 1rem;">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
